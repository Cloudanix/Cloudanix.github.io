"use strict";(self.webpackChunkcloudanix_docs=self.webpackChunkcloudanix_docs||[]).push([[90406],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=c(r),m=a,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(f,i(i({ref:t},s),{},{components:r})):n.createElement(f,i({ref:t},s))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},49333:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var n=r(83117),a=r(80102),o=(r(67294),r(3905)),i=(r(44996),["components"]),l={},u=void 0,c={unversionedId:"aws/audit/cloudtrailmonitoring/rules/cloudtrail_global_services_enabled_remediation",id:"aws/audit/cloudtrailmonitoring/rules/cloudtrail_global_services_enabled_remediation",title:"cloudtrail_global_services_enabled_remediation",description:"Remediation",source:"@site/docs/aws/audit/cloudtrailmonitoring/rules/cloudtrail_global_services_enabled_remediation.md",sourceDirName:"aws/audit/cloudtrailmonitoring/rules",slug:"/aws/audit/cloudtrailmonitoring/rules/cloudtrail_global_services_enabled_remediation",permalink:"/aws/audit/cloudtrailmonitoring/rules/cloudtrail_global_services_enabled_remediation",draft:!1,tags:[],version:"current",frontMatter:{}},s={},d=[{value:"Remediation",id:"remediation",level:3},{value:"Using AWS Console",id:"using-aws-console",level:4}],p={toc:d};function m(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"remediation"},"Remediation"),(0,o.kt)("p",null,"How to enable API logging for AWS global services within Amazon CloudTrail trail configuration?"),(0,o.kt)("h4",{id:"using-aws-console"},"Using AWS Console"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Step 1: Run update-trail command (OSX/Linux/UNIX) using the name of the Amazon CloudTrail trail that you want to reconfigure as the identifier parameter, to enable CloudTrail API logging for AWS global services such as Amazon IAM and Amazon CloudFront. To avoid receiving duplicate global service events, make sure that the global service events are delivered to only one of your trails:\naws cloudtrail update-trail\n--region us-east-1\n--name cc-project5-api-trail\n--include-global-service-events")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},'Step 2: The command output should return the metadata available for the reconfigured trail:\n{\n"IncludeGlobalServiceEvents": true,\n"IsOrganizationTrail": false,\n"Name": "cc-project5-api-trail",\n"TrailARN": "arn:aws:cloudtrail:us-east-1:123456789012:trail/cc-project5-api-trail",\n"LogFileValidationEnabled": false,\n"IsMultiRegionTrail": true,\n"S3BucketName": "cc-project5-cloudtrail-logs"\n}'))))}m.isMDXComponent=!0}}]);